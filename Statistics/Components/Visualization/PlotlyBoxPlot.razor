@using Plotly.Blazor.ConfigLib
@using Plotly.Blazor.LayoutLib
@using Plotly.Blazor.Traces.BoxLib
@using Title = Plotly.Blazor.LayoutLib.YAxisLib.Title

<div class="chart-container">
    <div class="spinner-container @(_isLoading ? "" : "hidden")">
        <div class="lds-spinner">
            <div></div>
            <div></div>
            <div></div>
            <div></div>
            <div></div>
            <div></div>
            <div></div>
            <div></div>
            <div></div>
            <div></div>
            <div></div>
            <div></div>
        </div>
    </div>
    <PlotlyChart @ref="_chart" Config="_config" Layout="_layout" Data="_plotTraceData" class="plotly-chart" style="height: 60vh; width: 100%;"/>
</div>

@code {

    /// <summary>
    ///     Gets or sets the data sets that should be plotted in the box plot.
    ///     The data sets are a list of lists of floats. Each list of floats represents a single data set that should be
    ///     plotted, the outer list represents the variable/systems
    /// </summary>
    [Parameter]
    public required List<List<float>> DataSets { get; set; }

    /// <summary>
    ///     Gets or sets the names of the data sets that should be plotted in the box plot.
    /// </summary>
    [Parameter]
    public required List<string> Names { get; set; }

    /// <summary>
    ///     Reference to the PlotlyChart component that is used to plot the box plot.
    /// </summary>
    private PlotlyChart? _chart;

    /// <summary>
    ///     Configuration for the PlotlyChart component that is used to plot the box plot.
    /// </summary>
    private Config _config = new();

    /// <summary>
    ///     Layout for the PlotlyChart component that is used to plot the box plot.
    /// </summary>
    private Layout _layout = new();

    /// <summary>
    ///     The data that should be plotted in the box plot converted to a list of traces.
    /// </summary>
    private IList<ITrace>? _plotTraceData;

    /// <summary>
    ///     Flag that indicates if the box plot is still loading.
    /// </summary>
    private bool _isLoading = true;

    /// <summary>
    ///     Initializes the component. Plots the box plot with the given data sets using a Plotly JavaScript library in the
    ///     PlotlyChart component. This might take some time to load as we have to load JS here dynamically.
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        // Create the plotly plot
        CreatePlotlyPlot();

        // Wait until the chart is loaded
        while (_chart == null)
        {
            await Task.Delay(100);
        }

        // Set the loading flag to false so the virtual dom switches to the plot into view
        _isLoading = false;
        StateHasChanged();
    }

    /// <summary>
    ///     Creates the plotly plot with the given data sets that this component was initialized with.
    /// </summary>
    private void CreatePlotlyPlot()
    {
        // Set the configuration and layout for the plotly plot
        _config = new Config
        {
            Responsive = true,
            DisplayLogo = false,
            DisplayModeBar = DisplayModeBarEnum.False,
            Editable = false,
            ScrollZoom = ScrollZoomFlag.False,
            EditSelection = false,
            ShowAxisDragHandles = false,
            ShowAxisRangeEntryBoxes = false,
            ShowEditInChartStudio = false
        };

        // Set the layout for the plotly plot
        _layout = new Layout
        {
            ShowLegend = false,
            YAxis =
            [
                new YAxis
                {
                    Range = new List<object> { 0, 100 },
                    Title = new Title
                    {
                        Text = "SUS Scores"
                    }
                }
            ]
        };

        // Create the box plot traces
        _plotTraceData = new List<ITrace>();

        // Create a box plot for each data set
        for (int i = 0; i < DataSets.Count; i++)
        {
            Box boxPlot = new()
            {
                Y = new List<object>(DataSets[i].Cast<object>()),
                Name = Names != null && i < Names.Count ? Names[i] : $"Dataset {i + 1}",
                BoxPoints = BoxPointsEnum.All,
                BoxMean = BoxMeanEnum.SD,
                Notched = true,
                Jitter = 0.3m,
                PointPos = -1.8m
            };

            // Add the box plot to the plot trace data
            _plotTraceData.Add(boxPlot);
        }
    }

}